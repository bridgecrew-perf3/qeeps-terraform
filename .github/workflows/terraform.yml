name: terraform

on:
  push:
    branches: [ develop, master ]
  pull_request:
    branches: [ develop ]
  workflow_dispatch:
env:
  ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
  ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}

defaults:
  run:
    shell: bash

concurrency: terraform-${{ github.ref }}

jobs:
  plan:
    runs-on: ubuntu-latest
    steps:
      - name: set TFENV=stg
        if: github.ref == 'refs/heads/develop'
        run: echo "TFENV=stg" >> $GITHUB_ENV
      - name: set TFENV=prod
        if: github.ref == 'refs/heads/master'
        run: echo "TFENV=stg" >> $GITHUB_ENV

      - name: git checkout
        uses: actions/checkout@v2

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1.2.1

      - name: terraform init
        run: terraform init
        working-directory: ${{ env.TFENV }}

      - name: terraform validate
        run: terraform validate
        working-directory: ${{ env.TFENV }}

      - name: terraform plan
        run: terraform plan -out ../tfplan
        working-directory: ${{ env.TFENV }}
        
      - name: upload tfplan
        uses: actions/upload-artifact@v2.2.4
        if: ${{ success() && github.event_name != 'pull_request' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/develop') }}
        with:
          name: tfplan
          path: ./tfplan
    
  apply_stg:
    runs-on: ubuntu-latest
    needs: [plan]
    if: ${{ success() && github.event_name != 'pull_request' && github.ref == 'refs/heads/develop' }}
    environment: stg
    steps:
      - name: git checkout
        uses: actions/checkout@v2
        
      - name: download tfplan
        uses: actions/download-artifact@v2.0.10
        with:
          name: tfplan
          path: ./stg

      - name: setup terraform
        uses: hashicorp/setup-terraform@v1.2.1

      - name: terraform init
        run: terraform init
        working-directory: stg

      - name: terraform apply
        run: ls -alh
        working-directory: stg

